// src\lib\types.ts
import { Prisma } from "@prisma/client";

export type Role = "superadmin" | "admin" | "manager" | "client";
export type Department = {
	id: number;
	name: string;
	productCount?: number;
	allowedCategories: { category: Category }[];
	users: User[];
	products: { id: number; title: string; sku: string; brand: string; price: number }[];
};

export type DepartmentForLog = {
	id: number;
	name: string;
};

export type DepartmentForProduct = {
	id: number;
	name: string;
};

export type User = {
	id: number;
	first_name: string;
	last_name: string;
	middle_name: string;
	phone: string;
	role: Role;
	department?: Department;
	departmentId?: number | null;
	status: string;
	orders: {
		id: number;
		title: string;
		status: string;
		createdAt: string;
	}[];
};

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export type UserLogAction = "create" | "update" | "delete" | "–°–æ–∑–¥–∞–Ω–∏–µ" | "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" | "–£–¥–∞–ª–µ–Ω–∏–µ";

export type UserLog = {
	id: number;
	createdAt: string;
	action?: UserLogAction; // –ü–æ–ª–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º
	actions: UserLogAction[]; // –ú–∞—Å—Å–∏–≤ –¥–µ–π—Å—Ç–≤–∏–π
	message?: string | null;
	adminId?: number;
	admin?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		role: string;
		department?: DepartmentForLog | null;
	};
	targetUserId?: number | null;
	targetUser: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		phone: string;
		role: string;
		department?: DepartmentForLog | null;
	};
	departmentId?: number | null;
	department?: DepartmentForLog | null;
	snapshotBefore?: any;
	snapshotAfter?: any;
	adminSnapshot?: any;
};

export type UserLogResponse = {
	data: UserLog[];
	total: number;
	page: number;
	totalPages: number;
	error?: string;
};

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–æ–≤ –æ—Ç–¥–µ–ª–æ–≤
export type DepartmentLogAction = "create_department" | "change_name" | "change_categories" | "add_employees" | "remove_employees" | "delete_department";

export type DepartmentLog = {
	id: number;
	createdAt: string;
	actions: DepartmentLogAction[]; // –ú–∞—Å—Å–∏–≤ –¥–µ–π—Å—Ç–≤–∏–π
	message?: string | null;
	adminId?: number;
	admin?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		role: string;
		department?: DepartmentForLog | null;
	};
	targetDepartmentId?: number | null;
	targetDepartment: Department;
	snapshotBefore?: any;
	snapshotAfter?: any;
	adminSnapshot?: any;
};

export type DepartmentLogResponse = {
	data: DepartmentLog[];
	total: number;
	page: number;
	totalPages: number;
	error?: string;
};

// –¢–∏–ø—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
export type FilterType = "select" | "multi_select" | "range" | "boolean";

export type FilterValue = {
	id: number;
	value: string;
};

export type CategoryFilter = {
	id: number;
	title: string;
	type: FilterType;
	values: FilterValue[];
};

export type Category = {
	id: number;
	title: string;
	image?: string | null;
	products?: Product[];
	filters?: CategoryFilter[]; // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–∏–ø
	productCount?: number;
	allowedDepartments?: { departmentId: number }[];
	order: number;
};

export type Product = {
	id: number;
	sku: string;
	title: string;
	description: string;
	price: number;
	supplierPrice?: number | null;
	image?: string | null;
	brand: string;
	createdAt: string;
	updatedAt: string;
	categoryId: number | null;
	categoryTitle: string;
	department?: DepartmentForProduct;
	filters: {
		filterId: number;
		valueId: number;
		value: string;
	}[];
	allowedCategories?: Category[];
	canChangeCategory?: boolean;
};

export type ProductWithRelationsFromDB = Prisma.ProductGetPayload<{
	include: {
		category: true;
		department: true;
	};
}>;

// üí° API-–æ—Ç–≤–µ—Ç –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
export type ProductListItem = {
	category?: {
		id: number;
		title: string;
	};
	department?: DepartmentForProduct;
	id: number;
	sku: string;
	title: string;
	description: string | null;
	price: number;
	supplierPrice?: number | null;
	brand: string;
	image: string | null;
	createdAt: string;
	updatedAt: string;
	categoryId: number | null;
	departmentId: number | null;
	categoryTitle: string;
};

// üßë‚Äçüé® UI: —Ñ–æ—Ä–º–∞
export type ProductFormData = {
	sku: string;
	title: string;
	description: string;
	price: string;
	supplierPrice: string;
	brand: string;
	categoryId: string;
	image: string;
	departmentId?: string;
};

// üÜï –ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä
export type NewProduct = Omit<EditableProduct, "id" | "createdAt" | "updatedAt" | "categoryTitle">;

// ‚úèÔ∏è UI: —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —Ç–æ–≤–∞—Ä
export type EditableProduct = {
	id: number;
	sku: string;
	title: string;
	description: string;
	price: number;
	supplierPrice?: number | null;
	brand: string;
	image: string | null;
	createdAt: string;
	updatedAt: string;
	categoryId: number | null;
	categoryTitle: string;
	departmentId?: number | null;
	department?: DepartmentForProduct;
	isEditing?: boolean;
	filters: any[];
};

export type ProductFilter = {
	id: number;
	title: string;
	selectedValues: {
		id: number;
		value: string;
	}[];
};

// –¢–∏–ø –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¥–ª—è –≤—ã–±–æ—Ä–∞)
export type CategoryFilterForSelection = {
	id: number;
	title: string;
	type: FilterType;
	values: FilterValue[];
};

// –¢–∏–ø –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–∞
export type SelectedFilterValue = {
	filterId: number;
	valueIds: number[];
};

export type ProductResponse = {
	product?: Omit<Product, "filters"> & {
		categoryId: number;
		filters?: ProductFilter[];
	};
	error?: string;
};

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
export type ProductLogAction = "create" | "update" | "delete" | "import" | "skipped" | "duplicate" | "bulk" | "bulk_delete";

export type ProductLog = {
	id: number;
	createdAt: string;
	action: ProductLogAction;
	message?: string | null;
	admin?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		middle_name?: string | null;
		phone?: string;
		role: string;
		department?: DepartmentForLog | null;
	};
	targetProduct?: {
		id: number;
		title: string;
		sku: string;
		brand: string;
		price: number;
		category?: { id: number; title: string };
		description?: string;
		department?: DepartmentForLog;
	};
	snapshotBefore?: any;
	snapshotAfter?: any;
	userSnapshot?: any;
	departmentSnapshot: DepartmentForLog | null; // –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç–¥–µ–ª–∞ —Ç–æ–≤–∞—Ä–∞ (–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ)
	departmentsSnapshot?: DepartmentForLog[] | null; // –î–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ)
	productSnapshot?: any; // –î–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–∫–∞–∫ –≤ –ª–æ–≥–µ –∏–º–ø–æ—Ä—Ç–∞)
	importLogId?: number | null; // –°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥ –∏–º–ø–æ—Ä—Ç–∞
	importLogData?: any; // –î–∞–Ω–Ω—ã–µ –ª–æ–≥–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
	// –î–∞–Ω–Ω—ã–µ –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
	bulkLogId?: number; // ID –ª–æ–≥–∞ –º–∞—Å—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
	bulkLogData?: any; // –î–∞–Ω–Ω—ã–µ –ª–æ–≥–∞ –º–∞—Å—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–æ–¥–µ—Ä–∂–∏—Ç productsSnapshot –≤–Ω—É—Ç—Ä–∏)
	// –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
	skippedProduct?: any;
	duplicateProduct?: any;
};

export type ProductLogResponse = {
	data: ProductLog[];
	total: number;
	page: number;
	totalPages: number;
	currentPage: number;
	targetProduct?: {
		id: number;
		title: string;
		sku: string;
		brand: string;
		price: number;
		category?: { id: number; title: string };
		department?: DepartmentForLog;
	};
	error?: string;
};

export type ServiceKit = {
	id: number;
	title: string;
	name: string; // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ name –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
	image?: string;
	description?: string;
	price?: number;
	parts?: {
		name: string; // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ title –Ω–∞ name –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
		analogs: string[] | Product[]; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
	}[];
};

export type Promotion = {
	id: number;
	title: string;
	description: string;
	image: string;
	order: number;
	buttonText: string;
	buttonLink: string;
};

export type AdminData = {
	id: number;
	first_name: string | null;
	last_name: string | null;
	phone: string;
	avatar: string | null;
	role: string;
	permissions: string[];
};

// –¢–∏–ø—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
export interface FilterOption {
	value: string;
	label: string;
}

export interface ActiveFilter {
	key: string;
	label: string;
	value: string;
}

export interface FiltersBlockProps {
	activeFilters: ActiveFilter[];
	onResetFilters: () => void;
	searchValue?: string;
	onSearchChange?: (value: string) => void;
	searchPlaceholder?: string;
	showSearch?: boolean;
	disabled?: boolean;
	className?: string;
	children?: React.ReactNode;
	hasRealActiveFilters?: boolean; // –ù–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
	onSelectAllByFilters?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º
	isLoadingBulkOperation?: boolean; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
	selectedProductsCount?: number; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
	onBulkDelete?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
	onBulkExport?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
	onClearSelection?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–Ω—è—Ç–∏—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
}

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
export type FilterValueForLog = {
	filterId: number;
	filterTitle: string;
	valueId: number;
	value: string;
};

export type FilterValueFromRequest = {
	filterId: number;
	valueId: number;
};

// –¢–∏–ø—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
export type FilterRequest = {
	filterId: number;
	valueIds: number[];
};

export type ProductCreateRequest = {
	title: string;
	sku: string;
	brand: string;
	price?: number;
	supplierPrice?: number;
	description?: string;
	image?: string;
	categoryId?: number;
	departmentId?: number;
	filterValues?: FilterRequest[];
};

export type ProductUpdateRequest = {
	title?: string;
	sku?: string;
	brand?: string;
	price?: number;
	supplierPrice?: number;
	description?: string;
	image?: string;
	categoryId?: number;
	departmentId?: number;
	filterValues?: FilterRequest[];
};

// ===== –¢–ò–ü–´ –î–õ–Ø –ó–ê–ö–ê–ó–û–í =====

export type OrderStatus = "created" | "confirmed" | "booked" | "ready" | "paid" | "completed" | "returned";

export type Order = {
	id: number;
	comments: string[];
	status: OrderStatus;
	createdAt: string | Date;
	updatedAt: string | Date;
	assignedAt?: string | Date | null;
	managerId?: number | null;
	departmentId?: number | null;
	clientId?: number | null;
	createdBy: number;
	// –°–≤—è–∑–∏
	manager?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		role: string;
		department?: DepartmentForLog | null;
	} | null;
	department?: DepartmentForLog | null;
	client?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		phone: string;
	} | null;
	creator: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		role: string;
		department?: DepartmentForLog | null;
	};
	orderItems: OrderItem[];
};

export type OrderItem = {
	id: number;
	orderId: number;
	product_sku: string;
	product_title: string;
	product_price: number;
	product_brand: string;
	product_image?: string | null;
	quantity: number;
};

// –¢–∏–ø –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
export type CreateOrderRequest = {
	clientId?: number; // –î–ª—è –∑–∞–∫–∞–∑–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	managerId?: number; // –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
	departmentId?: number; // –î–ª—è –∑–∞–∫–∞–∑–æ–≤ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–º (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞)
	orderItems: {
		product_sku: string;
		product_title: string;
		product_price: number;
		product_brand: string;
		product_image?: string | null;
		quantity: number;
		supplierDeliveryDate?: string; // –î–∞—Ç–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º
		carModel?: string; // –ù–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
		vinCode?: string; // VIN-–∫–æ–¥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
	}[];
	// –ü–æ–ª—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–∞
	contactPhone?: string; // 1. –ù–æ–≤—ã–π - –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω
	confirmationDate?: string; // 2. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π - –¥–∞—Ç–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è
	bookedUntil?: string; // 3. –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω - –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –¥–æ
	readyUntil?: string; // 4. –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ - –æ—Ç–ª–æ–∂–µ–Ω –¥–æ
	prepaymentAmount?: number; // 4. –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ - —Å—É–º–º–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã
	prepaymentDate?: string; // 4. –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ - –¥–∞—Ç–∞ –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã
	paymentDate?: string; // 5. –û–ø–ª–∞—á–µ–Ω - –¥–∞—Ç–∞ –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
	orderAmount?: number; // 5. –û–ø–ª–∞—á–µ–Ω - —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ (–Ω–µ—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–µ)
	completionDate?: string; // 6. –í—ã–ø–æ–ª–Ω–µ–Ω - –¥–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
	returnReason?: string; // 7. –í–æ–∑–≤—Ä–∞—Ç - –ø—Ä–∏—á–∏–Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ–∑–∏—Ü–∏–∏
	returnDate?: string; // 7. –í–æ–∑–≤—Ä–∞—Ç - –¥–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ–∑–∏—Ü–∏–∏
	returnAmount?: number; // 7. –í–æ–∑–≤—Ä–∞—Ç - —Å—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
	returnPaymentDate?: string; // 7. –í–æ–∑–≤—Ä–∞—Ç - –¥–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤
	returnDocumentNumber?: string; // 7. –í–æ–∑–≤—Ä–∞—Ç - –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤
	comments?: string[]; // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
};

// –¢–∏–ø –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
export type UpdateOrderRequest = {
	title?: string;
	description?: string;
	status?: OrderStatus;
	managerId?: number | null; // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ/—Å–Ω—è—Ç–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
	departmentId?: number | null;
};

// –¢–∏–ø –¥–ª—è –æ—Ç–≤–µ—Ç–∞ API –∑–∞–∫–∞–∑–æ–≤
export type OrderResponse = {
	orders?: Order[];
	order?: Order;
	total?: number;
	page?: number;
	totalPages?: number;
	error?: string;
};

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–æ–≤ –∑–∞–∫–∞–∑–æ–≤

export type OrderLogAction = "create" | "update" | "assign" | "status_change" | "cancel" | "unassign";

export type OrderLog = {
	id: number;
	createdAt: string | Date;
	action: OrderLogAction | string;
	message?: string | null;
	orderId: number;
	adminSnapshot?: any;
	orderSnapshot?: any;
	managerSnapshot?: any;
	departmentSnapshot?: any;
};

export type OrderLogResponse = {
	data: OrderLog[];
	total: number;
	page: number;
	totalPages: number;
	error?: string;
};

// –¢–∏–ø –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤
export type OrderFilter = {
	status?: OrderStatus[];
	managerId?: number | null;
	departmentId?: number | null;
	clientId?: number | null;
	createdBy?: number | null;
	dateFrom?: string;
	dateTo?: string;
};

// ===== –¢–ò–ü–´ –î–õ–Ø –ó–ê–ü–ò–°–ï–ô (BOOKING) =====

export type BookingStatus = "scheduled" | "confirmed" | "completed" | "cancelled" | "no_show";

export type Booking = {
	id: number;
	scheduledDate: string | Date; // –î–∞—Ç–∞ –∑–∞–ø–∏—Å–∏
	scheduledTime: string; // –í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "14:30"
	clientId?: number | null; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ - –¥–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
	managerId: number; // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ - –∫—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞–ø–∏—Å—å
	status: BookingStatus;
	notes?: string | null; // –ü—Ä–∏–º–µ—á–∞–Ω–∏—è, —Ç–∏–ø —É—Å–ª—É–≥–∏ –∏ —Ç.–¥.
	createdAt: string | Date;
	updatedAt: string | Date;
	// –°–≤—è–∑–∏
	client?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		phone: string;
	} | null;
	manager: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		role: string;
		department?: DepartmentForLog | null;
	};
};

// –¢–∏–ø –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
export type CreateBookingRequest = {
	scheduledDate: string; // –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "2024-12-25"
	scheduledTime: string; // –í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "14:30"
	clientId?: number | null; // ID –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
	managerId: number; // ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
	notes?: string; // –ü—Ä–∏–º–µ—á–∞–Ω–∏—è
	// –î–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
	clientName?: string; // –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞
	clientPhone?: string; // –¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞
	clientEmail?: string; // Email –∫–ª–∏–µ–Ω—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
};

// –¢–∏–ø –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
export type UpdateBookingRequest = {
	scheduledDate?: string;
	scheduledTime?: string;
	clientId?: number | null;
	managerId?: number;
	status?: BookingStatus;
	notes?: string;
	// –î–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
	clientName?: string;
	clientPhone?: string;
	clientEmail?: string;
};

// –¢–∏–ø –¥–ª—è –æ—Ç–≤–µ—Ç–∞ API –∑–∞–ø–∏—Å–µ–π
export type BookingResponse = {
	bookings?: Booking[];
	booking?: Booking;
	total?: number;
	page?: number;
	totalPages?: number;
	error?: string;
};

// –¢–∏–ø –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∑–∞–ø–∏—Å–µ–π
export type BookingFilter = {
	status?: BookingStatus[];
	managerId?: number | null;
	clientId?: number | null;
	dateFrom?: string;
	dateTo?: string;
	timeFrom?: string; // –í—Ä–µ–º—è –æ—Ç
	timeTo?: string; // –í—Ä–µ–º—è –¥–æ
};
