// src\lib\types.ts
import { Prisma } from "@prisma/client";

export type Role = "superadmin" | "admin" | "manager" | "client";
export type Department = {
	id: number;
	name: string;
	productCount?: number;
	allowedCategories: { category: Category }[];
	users: User[];
	products: { id: number; title: string; sku: string; brand: string; price: number }[];
};

export type DepartmentForLog = {
	id: number;
	name: string;
};

export type DepartmentForProduct = {
	id: number;
	name: string;
};

export type User = {
	id: number;
	first_name: string;
	last_name: string;
	middle_name: string;
	phone: string;
	role: Role;
	department?: Department;
	departmentId?: number | null;
	status: string;
	orders: {
		id: number;
		title: string;
		status: string;
		createdAt: string;
	}[];
};

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export type UserLogAction = "create" | "update" | "delete" | "–°–æ–∑–¥–∞–Ω–∏–µ" | "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" | "–£–¥–∞–ª–µ–Ω–∏–µ";

export type UserLog = {
	id: number;
	createdAt: string;
	action?: UserLogAction; // –ü–æ–ª–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º
	actions: UserLogAction[]; // –ú–∞—Å—Å–∏–≤ –¥–µ–π—Å—Ç–≤–∏–π
	message?: string | null;
	adminId?: number;
	admin?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		role: string;
		department?: DepartmentForLog | null;
	};
	targetUserId?: number | null;
	targetUser: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		phone: string;
		role: string;
		department?: DepartmentForLog | null;
	};
	departmentId?: number | null;
	department?: DepartmentForLog | null;
	snapshotBefore?: any;
	snapshotAfter?: any;
	adminSnapshot?: any;
};

export type UserLogResponse = {
	data: UserLog[];
	total: number;
	page: number;
	totalPages: number;
	error?: string;
};

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–æ–≤ –æ—Ç–¥–µ–ª–æ–≤
export type DepartmentLogAction = "create_department" | "change_name" | "change_categories" | "add_employees" | "remove_employees" | "delete_department";

export type DepartmentLog = {
	id: number;
	createdAt: string;
	actions: DepartmentLogAction[]; // –ú–∞—Å—Å–∏–≤ –¥–µ–π—Å—Ç–≤–∏–π
	message?: string | null;
	adminId?: number;
	admin?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		role: string;
		department?: DepartmentForLog | null;
	};
	targetDepartmentId?: number | null;
	targetDepartment: Department;
	snapshotBefore?: any;
	snapshotAfter?: any;
	adminSnapshot?: any;
};

export type DepartmentLogResponse = {
	data: DepartmentLog[];
	total: number;
	page: number;
	totalPages: number;
	error?: string;
};

// –¢–∏–ø—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
export type FilterType = "select" | "multi_select" | "range" | "boolean";

export type FilterValue = {
	id: number;
	value: string;
};

export type CategoryFilter = {
	id: number;
	title: string;
	type: FilterType;
	values: FilterValue[];
};

export type Category = {
	id: number;
	title: string;
	image?: string | null;
	products?: Product[];
	filters?: CategoryFilter[]; // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–∏–ø
	productCount?: number;
	allowedDepartments?: { departmentId: number }[];
	order: number;
};

export type Product = {
	id: number;
	sku: string;
	title: string;
	description: string;
	price: number;
	supplierPrice?: number | null;
	image?: string | null;
	brand: string;
	createdAt: string;
	updatedAt: string;
	categoryId: number | null;
	categoryTitle: string;
	department?: DepartmentForProduct;
	filters: {
		filterId: number;
		valueId: number;
		value: string;
	}[];
	allowedCategories?: Category[];
	canChangeCategory?: boolean;
};

export type ProductWithRelationsFromDB = Prisma.ProductGetPayload<{
	include: {
		category: true;
		department: true;
	};
}>;

// üí° API-–æ—Ç–≤–µ—Ç –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
export type ProductListItem = {
	category?: {
		id: number;
		title: string;
	};
	department?: DepartmentForProduct;
	id: number;
	sku: string;
	title: string;
	description: string | null;
	price: number;
	supplierPrice?: number | null;
	brand: string;
	image: string | null;
	createdAt: string;
	updatedAt: string;
	categoryId: number | null;
	departmentId: number | null;
	categoryTitle: string;
};

// üßë‚Äçüé® UI: —Ñ–æ—Ä–º–∞
export type ProductFormData = {
	sku: string;
	title: string;
	description: string;
	price: string;
	supplierPrice: string;
	brand: string;
	categoryId: string;
	image: string;
	departmentId?: string;
};

// üÜï –ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä
export type NewProduct = Omit<EditableProduct, "id" | "createdAt" | "updatedAt" | "categoryTitle">;

// ‚úèÔ∏è UI: —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —Ç–æ–≤–∞—Ä
export type EditableProduct = {
	id: number;
	sku: string;
	title: string;
	description: string;
	price: number;
	supplierPrice?: number | null;
	brand: string;
	image: string | null;
	createdAt: string;
	updatedAt: string;
	categoryId: number | null;
	categoryTitle: string;
	departmentId?: number | null;
	department?: DepartmentForProduct;
	isEditing?: boolean;
	filters: any[];
};

export type ProductFilter = {
	id: number;
	title: string;
	selectedValues: {
		id: number;
		value: string;
	}[];
};

// –¢–∏–ø –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¥–ª—è –≤—ã–±–æ—Ä–∞)
export type CategoryFilterForSelection = {
	id: number;
	title: string;
	type: FilterType;
	values: FilterValue[];
};

// –¢–∏–ø –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–∏–ª—å—Ç—Ä–∞
export type SelectedFilterValue = {
	filterId: number;
	valueIds: number[];
};

export type ProductResponse = {
	product?: Omit<Product, "filters"> & {
		categoryId: number;
		filters?: ProductFilter[];
	};
	error?: string;
};

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
export type ProductLogAction = "create" | "update" | "delete" | "import" | "skipped" | "duplicate" | "bulk" | "bulk_delete";

export type ProductLog = {
	id: number;
	createdAt: string;
	action: ProductLogAction;
	message?: string | null;
	admin?: {
		id: number;
		first_name: string | null;
		last_name: string | null;
		middle_name?: string | null;
		phone?: string;
		role: string;
		department?: DepartmentForLog | null;
	};
	targetProduct?: {
		id: number;
		title: string;
		sku: string;
		brand: string;
		price: number;
		category?: { id: number; title: string };
		description?: string;
		department?: DepartmentForLog;
	};
	department?: {
		id: number;
		name: string;
		multipleDepartments?: boolean; // –§–ª–∞–≥ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤
		allDepartments?: DepartmentForLog[]; // –í—Å–µ –æ—Ç–¥–µ–ª—ã –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
	} | null;
	snapshotBefore?: any;
	snapshotAfter?: any;
	userSnapshot?: any;
	departmentSnapshot?: DepartmentForLog[] | null;
	productSnapshot?: any; // –î–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–∫–∞–∫ –≤ –ª–æ–≥–µ –∏–º–ø–æ—Ä—Ç–∞)
	importLogId?: number | null; // –°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥ –∏–º–ø–æ—Ä—Ç–∞
	importLogData?: any; // –î–∞–Ω–Ω—ã–µ –ª–æ–≥–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
	// –î–∞–Ω–Ω—ã–µ –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
	bulkLogId?: number; // ID –ª–æ–≥–∞ –º–∞—Å—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
	bulkLogData?: any; // –î–∞–Ω–Ω—ã–µ –ª–æ–≥–∞ –º–∞—Å—Å–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–æ–¥–µ—Ä–∂–∏—Ç productsSnapshot –≤–Ω—É—Ç—Ä–∏)
	// –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
	skippedProduct?: any;
	duplicateProduct?: any;
};

export type ProductLogResponse = {
	data: ProductLog[];
	total: number;
	page: number;
	totalPages: number;
	currentPage: number;
	targetProduct?: {
		id: number;
		title: string;
		sku: string;
		brand: string;
		price: number;
		category?: { id: number; title: string };
		department?: DepartmentForLog;
	};
	error?: string;
};

export type ServiceKit = {
	id: number;
	title: string;
	name: string; // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ name –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
	image?: string;
	description?: string;
	price?: number;
	parts?: {
		name: string; // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ title –Ω–∞ name –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
		analogs: string[] | Product[]; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
	}[];
};

export type Promotion = {
	id: number;
	title: string;
	description: string;
	image: string;
	order: number;
	buttonText: string;
	buttonLink: string;
};

export type AdminData = {
	id: number;
	first_name: string | null;
	last_name: string | null;
	phone: string;
	avatar: string | null;
	role: string;
	permissions: string[];
};

// –¢–∏–ø—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
export interface FilterOption {
	value: string;
	label: string;
}

export interface ActiveFilter {
	key: string;
	label: string;
	value: string;
}

export interface FiltersBlockProps {
	activeFilters: ActiveFilter[];
	onResetFilters: () => void;
	searchValue?: string;
	onSearchChange?: (value: string) => void;
	searchPlaceholder?: string;
	showSearch?: boolean;
	disabled?: boolean;
	className?: string;
	children?: React.ReactNode;
	hasRealActiveFilters?: boolean; // –ù–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
	onSelectAllByFilters?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º
	isLoadingBulkOperation?: boolean; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
	selectedProductsCount?: number; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
	onBulkDelete?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
	onBulkExport?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
	onClearSelection?: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–Ω—è—Ç–∏—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
}

// –¢–∏–ø—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
export type FilterValueForLog = {
	filterId: number;
	filterTitle: string;
	valueId: number;
	value: string;
};

export type FilterValueFromRequest = {
	filterId: number;
	valueId: number;
};

// –¢–∏–ø—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
export type FilterRequest = {
	filterId: number;
	valueIds: number[];
};

export type ProductCreateRequest = {
	title: string;
	sku: string;
	brand: string;
	price?: number;
	supplierPrice?: number;
	description?: string;
	image?: string;
	categoryId?: number;
	departmentId?: number;
	filterValues?: FilterRequest[];
};

export type ProductUpdateRequest = {
	title?: string;
	sku?: string;
	brand?: string;
	price?: number;
	supplierPrice?: number;
	description?: string;
	image?: string;
	categoryId?: number;
	departmentId?: number;
	filterValues?: FilterRequest[];
};
