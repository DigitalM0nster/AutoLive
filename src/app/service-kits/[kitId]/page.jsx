import { useParams } from "react-router-dom";
import { useState, useEffect } from "react";
import NavigationMenu from "../../../components/navigationMenu/NavigationMenu";
import styles from "../styles.module.scss";
import CONFIG from "@/app/lib/config"; // üî• –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥

// ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
export async function generateMetadata({ params }) {
	const city = CONFIG.CITY; // üî• –ì–æ—Ä–æ–¥ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
	const storeName = CONFIG.STORE_NAME;
	const domain = CONFIG.DOMAIN;

	// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞ –¢–û (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å API)
	const response = await fetch(`${domain}/api/service-kits/${params.kitId}`);
	const kit = await response.json();

	if (!kit || kit.error) {
		return {
			title: `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–ª–µ–∫—Ç–∞ –¢–û | ${storeName}`,
			description: `–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–ª–µ–∫—Ç–µ –¢–û. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞ ${domain}.`,
			keywords: `–æ—à–∏–±–∫–∞, –∫–æ–º–ø–ª–µ–∫—Ç –¢–û, –∑–∞–ø—á–∞—Å—Ç–∏, –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å, ${storeName}, ${domain}`,
		};
	}

	return {
		title: `${kit.name} ‚Äì –ö–æ–º–ø–ª–µ–∫—Ç –¢–û –≤ ${storeName} | ${city}`,
		description: `–ö—É–ø–∏—Ç—å ${kit.name} –≤ ${storeName} (${domain}) –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ. –í–∫–ª—é—á–∞–µ—Ç: ${kit.parts.map((part) => part.name).join(", ")}.`,
		keywords: `${kit.name} ${city}, –∫–æ–º–ø–ª–µ–∫—Ç –¢–û ${city}, ${kit.parts.map((part) => part.name).join(", ")}, –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ ${city}, –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å, ${storeName}, ${domain}`,
	};
}

export default function ServiceKit() {
	const { kitId } = useParams();
	const [kit, setKit] = useState(null);

	// –≠–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–ª–µ–∫—Ç–µ –¢–û
	useEffect(() => {
		// –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å fetch(`/api/service-kits/${kitId}`)
		const fetchedKit = {
			name: "–ö–æ–º–ø–ª–µ–∫—Ç –¢–û –¥–ª—è Hyundai",
			image: "/images/huyndaiKitExample.jpg",
			description: "–§–∏–ª—å—Ç—Ä—ã, –º–∞—Å–ª–æ –∏ –∫–æ–ª—å—Ü–æ –º–∞—Å–ª—è–Ω–æ–π –ø—Ä–æ–±–∫–∏ –¥–ª—è Kia Rio –∏ Hyundai Solaris",
			price: 800,
			parts: [
				{ name: "–ú–∞—Å–ª—è–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä", analogs: ["Bosch", "Mann", "Mahle"] },
				{ name: "–í–æ–∑–¥—É—à–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä", analogs: ["Hengst", "Mahle", "Knecht"] },
				{ name: "–°–∞–ª–æ–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä", analogs: ["Sakura", "Bosch", "Mann"] },
				{ name: "–ú–æ—Ç–æ—Ä–Ω–æ–µ –º–∞—Å–ª–æ 5W-30", analogs: ["Mobil1", "Castrol", "Shell"] },
			],
		};
		setKit(fetchedKit);
	}, [kitId]);

	if (!kit) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

	return (
		<div className={`screen ${styles.screen}`}>
			<div className="screenContent">
				<NavigationMenu />
				<div className={`screenBlock ${styles.screenBlock}`}>
					<div className={styles.serviceKitDetail}>
						<div className={styles.title}>{kit.name}</div>
						<img src={kit.image} alt={kit.name} className={styles.image} />
						<p className={styles.description}>{kit.description}</p>
						<div className={styles.partsList}>
							<h3>–°–æ—Å—Ç–∞–≤ –∫–æ–º–ø–ª–µ–∫—Ç–∞:</h3>
							<ul>
								{kit.parts.map((part, index) => (
									<li key={index} className={styles.partItem}>
										<div>{part.name}</div>
										<select className={styles.analogSelect}>
											{part.analogs.map((analog, i) => (
												<option key={i} value={analog}>
													{analog}
												</option>
											))}
										</select>
									</li>
								))}
							</ul>
						</div>
						<div className={styles.buttonBlock}>
							<div className={styles.price}>–°—Ç–æ–∏–º–æ—Å—Ç—å: {kit.price} —Ä—É–±–ª–µ–π.</div>
							<div className={`button ${styles.button}`}>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	);
}
