"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { useAuthStore } from "@/store/authStore";
import Link from "next/link";
// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∏–∑ globals.scss
import { Product, Category, Department, CategoryFilterForSelection, SelectedFilterValue } from "@/lib/types";
import { showSuccessToast, showErrorToast } from "@/components/ui/toast/ToastProvider";
import Loading from "@/components/ui/loading/Loading";
import ConfirmPopup from "@/components/ui/confirmPopup/ConfirmPopup";
import ImageUpload from "@/components/ui/imageUpload/ImageUpload";
import Skeleton from "./Skeleton";

type ProductPageProps = {
	productId?: string | number; // –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –∑–Ω–∞—á–∏—Ç —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
	isCreating?: boolean;
	userRole?: string; // –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
};

export default function ProductComponent({ productId, isCreating = false, userRole }: ProductPageProps) {
	const { user } = useAuthStore();
	const router = useRouter();
	const [productData, setProductData] = useState<Product | null>(null);
	const [loading, setLoading] = useState(!isCreating); // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
	const [error, setError] = useState<string | null>(null);
	const [categories, setCategories] = useState<Category[]>([]);
	const [allowedCategories, setAllowedCategories] = useState<Category[]>([]);
	const [departments, setDepartments] = useState<Department[]>([]);
	const [categoryFilters, setCategoryFilters] = useState<CategoryFilterForSelection[]>([]);
	const [selectedFilters, setSelectedFilters] = useState<SelectedFilterValue[]>([]);
	const [isLoadingFilters, setIsLoadingFilters] = useState(false);
	const [canChangeCategory, setCanChangeCategory] = useState(true);
	const [isSaving, setIsSaving] = useState(false);
	const [hasChanges, setHasChanges] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
	const [showDeleteConfirm, setShowDeleteConfirm] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
	const [isDeleting, setIsDeleting] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è
	const [initialFormData, setInitialFormData] = useState({
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
		title: "",
		sku: "",
		brand: "",
		price: "",
		supplierPrice: "",
		description: "",
		categoryId: "",
		departmentId: "",
	});
	const [initialSelectedFilters, setInitialSelectedFilters] = useState<SelectedFilterValue[]>([]);

	// –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
	const [formImage, setFormImage] = useState<File | null>(null);
	const [imagePreview, setImagePreview] = useState<string>("");
	const [originalImage, setOriginalImage] = useState<string>("");

	// –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—Å–æ–∑–¥–∞–Ω–∏—è
	const [formData, setFormData] = useState({
		title: "",
		sku: "",
		brand: "",
		price: "",
		supplierPrice: "",
		description: "",
		categoryId: "",
		departmentId: "",
	});

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const isEditMode = userRole === "superadmin" || userRole === "admin";
	const isViewMode = userRole === "manager";

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
	useEffect(() => {
		if (isCreating && !isEditMode) {
			showErrorToast("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤");
			router.push("/admin/product-management/products");
		}
	}, [isCreating, isEditMode, router]);

	// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞
	useEffect(() => {
		const fetchProductData = async () => {
			if (isCreating) return; // –ù–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä

			try {
				setLoading(true);
				const response = await fetch(`/api/products/${productId}`, {
					method: "GET",
					credentials: "include",
				});

				if (!response.ok) {
					const errorData = await response.json();
					throw new Error(errorData.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞");
				}

				const data = await response.json();
				const product = data.product; // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç { product: {...} }
				setProductData(product);

				// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ API
				if (product.allowedCategories) {
					setAllowedCategories(product.allowedCategories);
				}
				if (product.canChangeCategory !== undefined) {
					setCanChangeCategory(product.canChangeCategory);
				}

				setFormData({
					title: product.title || "",
					sku: product.sku || "",
					brand: product.brand || "",
					price: product.price?.toString() || "",
					supplierPrice: product.supplierPrice?.toString() || "",
					description: product.description || "",
					categoryId: product.categoryId?.toString() || "",
					departmentId: product.department?.id?.toString() || "",
				});
				setInitialFormData({
					// –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
					title: product.title || "",
					sku: product.sku || "",
					brand: product.brand || "",
					price: product.price?.toString() || "",
					supplierPrice: product.supplierPrice?.toString() || "",
					description: product.description || "",
					categoryId: product.categoryId?.toString() || "",
					departmentId: product.department?.id?.toString() || "",
				});

				// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
				setImagePreview(product.image || "");
				setOriginalImage(product.image || "");

				// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞
				if (product.filters && product.filters.length > 0) {
					console.log("üîç LOADING PRODUCT FILTERS:", product.filters);
					const existingFilters = product.filters.map((filter: any) => {
						if (filter.type === "range") {
							// –î–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º rangeValue
							const rangeValue = filter.selected_values && filter.selected_values.length > 0 ? Number(filter.selected_values[0].value) : undefined;
							console.log("üîç RANGE FILTER:", { id: filter.id, selected_values: filter.selected_values, rangeValue });
							return {
								filterId: filter.id,
								valueIds: [], // –î–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ valueIds –ø—É—Å—Ç–æ–π
								rangeValue: rangeValue,
							};
						} else {
							// –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º valueIds
							return {
								filterId: filter.id,
								valueIds: filter.selected_values ? filter.selected_values.map((value: any) => value.id) : [],
							};
						}
					});
					console.log("üîç CREATED FILTERS:", existingFilters);
					setSelectedFilters(existingFilters);
					setInitialSelectedFilters(existingFilters); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
				} else {
					console.log("üîç NO PRODUCT FILTERS");
					setSelectedFilters([]);
					setInitialSelectedFilters([]);
				}

				// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
				if (product.categoryId) {
					fetchCategoryFiltersForProduct(product.categoryId);
				}
			} catch (err) {
				console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞:", err);
				setError(err instanceof Error ? err.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
			} finally {
				setLoading(false);
			}
		};

		fetchProductData();
	}, [productId, isCreating]);

	// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –æ—Ç–¥–µ–ª–æ–≤
	useEffect(() => {
		const fetchCategoriesAndDepartments = async () => {
			try {
				// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–≤—Å–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
				const categoriesResponse = await fetch("/api/categories", {
					credentials: "include",
				});
				if (categoriesResponse.ok) {
					const categoriesData = await categoriesResponse.json();
					setCategories(categoriesData);
				}

				// –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–¥–µ–ª—ã
				const departmentsResponse = await fetch("/api/departments", {
					credentials: "include",
				});
				if (departmentsResponse.ok) {
					const departmentsData = await departmentsResponse.json();
					setDepartments(departmentsData);
				}
			} catch (err) {
				console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –æ—Ç–¥–µ–ª–æ–≤:", err);
			}
		};

		fetchCategoriesAndDepartments();
	}, []);

	// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ç–¥–µ–ª–∞ (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞)
	useEffect(() => {
		const loadAllowedCategories = async () => {
			if (formData.departmentId && isCreating) {
				try {
					const response = await fetch(`/api/categories?departmentId=${formData.departmentId}`, {
						credentials: "include",
					});
					if (response.ok) {
						const categoriesData = await response.json();
						setAllowedCategories(categoriesData);
						setCanChangeCategory(categoriesData.length > 0);
					}
				} catch (err) {
					console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:", err);
				}
			}
		};

		loadAllowedCategories();
	}, [formData.departmentId, isCreating]);

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç–¥–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –Ω–µ-—Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–≤
	useEffect(() => {
		if (isCreating && user?.role !== "superadmin" && user?.departmentId) {
			setFormData((prev) => ({
				...prev,
				departmentId: user.departmentId!.toString(),
			}));
		}
	}, [isCreating, user?.role, user?.departmentId]);

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	const fetchCategoryFiltersForProduct = async (categoryId: number) => {
		setIsLoadingFilters(true);
		try {
			const response = await fetch(`/api/categories/${categoryId}/filters`, {
				credentials: "include",
			});

			if (response.ok) {
				const filters = await response.json();
				setCategoryFilters(filters);
			} else {
				console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤:", response.status, response.statusText);
				setCategoryFilters([]);
			}
		} catch (err) {
			console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:", err);
			setCategoryFilters([]);
		} finally {
			setIsLoadingFilters(false);
		}
	};

	// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	useEffect(() => {
		const fetchCategoryFilters = async () => {
			if (!formData.categoryId) {
				setCategoryFilters([]);
				setSelectedFilters([]);
				return;
			}

			await fetchCategoryFiltersForProduct(Number(formData.categoryId));

			// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
			if (isCreating) {
				console.log("üîç CREATING NEW PRODUCT - INIT FILTERS");
				setSelectedFilters((prev) => {
					if (prev.length > 0) {
						console.log("üîç ALREADY HAVE FILTERS:", prev);
						return prev;
					}
					// –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º–∏
					const emptyFilters = categoryFilters.map((filter: CategoryFilterForSelection) => ({
						filterId: filter.id,
						valueIds: [],
						...(filter.type === "range" && { rangeValue: undefined }),
					}));
					console.log("üîç CREATED EMPTY FILTERS:", emptyFilters);
					return emptyFilters;
				});
			} else {
				console.log("üîç EDITING EXISTING PRODUCT - NOT INIT FILTERS");
			}
		};

		fetchCategoryFilters();
	}, [formData.categoryId, isCreating]);

	// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–µ, —Ñ–∏–ª—å—Ç—Ä–∞—Ö –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
	useEffect(() => {
		const hasFormChanges = JSON.stringify(formData) !== JSON.stringify(initialFormData);
		const hasFilterChanges = JSON.stringify(selectedFilters) !== JSON.stringify(initialSelectedFilters);
		const hasImageChanges = formImage !== null;
		setHasChanges(hasFormChanges || hasFilterChanges || hasImageChanges);
	}, [formData, initialFormData, selectedFilters, initialSelectedFilters, formImage]);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
	const handleInputChange = async (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
		const { name, value } = e.target;

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–∞
		if (name === "departmentId" && user?.role !== "superadmin") {
			showErrorToast("–¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –æ—Ç–¥–µ–ª —Ç–æ–≤–∞—Ä–∞");
			return;
		}

		setFormData((prev) => ({
			...prev,
			[name]: value,
		}));

		// –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è –æ—Ç–¥–µ–ª, –∑–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–¥–µ–ª–∞
		if (name === "departmentId" && value) {
			try {
				const response = await fetch(`/api/categories?departmentId=${value}`, {
					credentials: "include",
				});
				if (response.ok) {
					const categoriesData = await response.json();
					setAllowedCategories(categoriesData);
					setCanChangeCategory(categoriesData.length > 0);

					// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–∞
					const currentCategoryId = formData.categoryId;
					if (currentCategoryId && !categoriesData.some((cat: Category) => cat.id.toString() === currentCategoryId)) {
						setFormData((prev) => ({
							...prev,
							categoryId: "",
						}));
						// –û—á–∏—â–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
						setCategoryFilters([]);
						setSelectedFilters([]);
					}
				}
			} catch (err) {
				console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:", err);
			}
		}

		// –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
		if (name === "categoryId") {
			if (value) {
				await fetchCategoryFiltersForProduct(Number(value));
			} else {
				// –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å–±—Ä–æ—à–µ–Ω–∞, –æ—á–∏—â–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
				setCategoryFilters([]);
				setSelectedFilters([]);
			}
		}
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–¥–ª—è select –∏ multi_select)
	const handleFilterChange = (filterId: number, valueId: number) => {
		setSelectedFilters((prev) => {
			const existingFilterIndex = prev.findIndex((f) => f.filterId === filterId);
			const filter = categoryFilters.find((f) => f.id === filterId);

			if (existingFilterIndex !== -1) {
				const existingFilter = prev[existingFilterIndex];

				if (filter?.type === "select") {
					// –î–ª—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ - –µ—Å–ª–∏ –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ—Ç–∫–ª—é—á–∞–µ–º –µ–≥–æ
					if (existingFilter.valueIds.includes(valueId)) {
						const newFilters = [...prev];
						newFilters[existingFilterIndex] = {
							...existingFilter,
							valueIds: [],
						};
						return newFilters;
					} else {
						// –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ
						const newFilters = [...prev];
						newFilters[existingFilterIndex] = {
							...existingFilter,
							valueIds: [valueId],
						};
						return newFilters;
					}
				} else {
					// –î–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
					const newValueIds = existingFilter.valueIds.includes(valueId) ? existingFilter.valueIds.filter((id) => id !== valueId) : [...existingFilter.valueIds, valueId];
					const newFilters = [...prev];
					newFilters[existingFilterIndex] = {
						...existingFilter,
						valueIds: newValueIds,
					};
					return newFilters;
				}
			} else {
				// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
				return [...prev, { filterId, valueIds: [valueId] }];
			}
		});
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ (range)
	const handleRangeValueChange = (filterId: number, value: string) => {
		console.log("üîç RANGE CHANGE:", { filterId, value });
		setSelectedFilters((prev) => {
			console.log("üîç BEFORE:", prev);
			const existingFilterIndex = prev.findIndex((f) => f.filterId === filterId);
			const numericValue = value ? Number(value) : undefined;
			console.log("üîç existingFilterIndex:", existingFilterIndex, "numericValue:", numericValue);

			if (existingFilterIndex !== -1) {
				// –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∏–ª—å—Ç—Ä
				const newFilters = [...prev];
				newFilters[existingFilterIndex] = {
					...newFilters[existingFilterIndex],
					valueIds: [],
					rangeValue: numericValue,
				};
				console.log("üîç UPDATED:", newFilters);
				return newFilters;
			} else if (numericValue !== undefined) {
				// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä —Å —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
				const newFilter = {
					filterId,
					valueIds: [],
					rangeValue: numericValue,
				};
				const result = [...prev, newFilter];
				console.log("üîç CREATED:", result);
				return result;
			}
			console.log("üîç NO CHANGE");
			return prev;
		});
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (boolean)
	const handleBooleanValueChange = (filterId: number, valueId: number) => {
		setSelectedFilters((prev) => {
			const existingFilterIndex = prev.findIndex((f) => f.filterId === filterId);

			if (existingFilterIndex !== -1) {
				const existingFilter = prev[existingFilterIndex];

				if (existingFilter.valueIds.includes(valueId)) {
					const newFilters = [...prev];
					newFilters[existingFilterIndex] = {
						...existingFilter,
						valueIds: [],
					};
					return newFilters;
				} else {
					const newFilters = [...prev];
					newFilters[existingFilterIndex] = {
						...existingFilter,
						valueIds: [valueId],
					};
					return newFilters;
				}
			} else {
				return [...prev, { filterId, valueIds: [valueId] }];
			}
		});
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (boolean) - —Å—Ç–∞—Ä—ã–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
	const handleBooleanChange = (filterId: number, value: boolean) => {
		setSelectedFilters((prev) => {
			const existingFilterIndex = prev.findIndex((f) => f.filterId === filterId);
			const valueId = value ? 1 : 0;

			if (existingFilterIndex !== -1) {
				// –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∏–ª—å—Ç—Ä
				const newFilters = [...prev];
				newFilters[existingFilterIndex] = {
					...newFilters[existingFilterIndex],
					valueIds: [valueId],
				};
				return newFilters;
			} else {
				// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä —Å –±—É–ª–µ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
				return [...prev, { filterId, valueIds: [valueId] }];
			}
		});
	};

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞
	const getRangeValue = (filterId: number) => {
		const filter = selectedFilters.find((f) => f.filterId === filterId);
		console.log("üîç GET RANGE VALUE:", { filterId, filter, selectedFilters });
		if (filter && filter.rangeValue !== undefined && filter.rangeValue !== null) {
			console.log("üîç RETURNING:", filter.rangeValue.toString());
			return filter.rangeValue.toString();
		}
		console.log("üîç RETURNING EMPTY");
		return "";
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
	const handleImageChange = (file: File | null) => {
		setFormImage(file);
	};

	const handleImageRemove = () => {
		setFormImage(null);
		setImagePreview("");
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π
	const handleCancel = () => {
		if (productData) {
			// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
			setFormData({
				title: productData.title || "",
				sku: productData.sku || "",
				brand: productData.brand || "",
				price: productData.price?.toString() || "",
				supplierPrice: productData.supplierPrice?.toString() || "",
				description: productData.description || "",
				categoryId: productData.categoryId?.toString() || "",
				departmentId: productData.department?.id?.toString() || "",
			});

			// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
			if (productData.allowedCategories) {
				setAllowedCategories(productData.allowedCategories);
			}
			if (productData.canChangeCategory !== undefined) {
				setCanChangeCategory(productData.canChangeCategory);
			}

			// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
			if (productData.filters && productData.filters.length > 0) {
				const existingFilters = productData.filters.map((filter: any) => {
					if (filter.type === "range") {
						const rangeValue = filter.selected_values && filter.selected_values.length > 0 ? Number(filter.selected_values[0].value) : undefined;
						return {
							filterId: filter.id,
							valueIds: [],
							rangeValue: rangeValue,
						};
					} else {
						return {
							filterId: filter.id,
							valueIds: filter.selected_values ? filter.selected_values.map((value: any) => value.id) : [],
						};
					}
				});
				setSelectedFilters(existingFilters);
				setInitialSelectedFilters(existingFilters);
			} else {
				setSelectedFilters([]);
				setInitialSelectedFilters([]);
			}

			// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
			setFormImage(null);
			setImagePreview(originalImage);

			// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
			if (productData.categoryId) {
				fetchCategoryFiltersForProduct(productData.categoryId);
			} else {
				setCategoryFilters([]);
			}

			// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
			setHasChanges(false);
		} else {
			// –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ
			setFormData({
				title: "",
				sku: "",
				brand: "",
				price: "",
				supplierPrice: "",
				description: "",
				categoryId: "",
				departmentId: "",
			});
			setSelectedFilters([]);
			setInitialSelectedFilters([]);
			setAllowedCategories([]);
			setCanChangeCategory(true);
			setCategoryFilters([]);
			setHasChanges(false);
		}
	};

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–æ –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
	const isFilterValueSelected = (filterId: number, valueId: number) => {
		const filter = selectedFilters.find((f) => f.filterId === filterId);
		return filter ? filter.valueIds.includes(valueId) : false;
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
	const handleSave = async () => {
		try {
			setIsSaving(true);
			setInitialSelectedFilters(selectedFilters);

			// –í–∞–ª–∏–¥–∞—Ü–∏—è
			if (!formData.title.trim()) {
				showErrorToast("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ");
				return;
			}
			if (!formData.sku.trim()) {
				showErrorToast("SKU —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ");
				return;
			}
			if (!formData.brand.trim()) {
				showErrorToast("–ë—Ä–µ–Ω–¥ —Ç–æ–≤–∞—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω");
				return;
			}
			if (!formData.price || isNaN(Number(formData.price))) {
				showErrorToast("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º");
				return;
			}
			if (!formData.supplierPrice || isNaN(Number(formData.supplierPrice))) {
				showErrorToast("–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º");
				return;
			}

			// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ü–µ–Ω—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
			const supplierPrice = Number(formData.supplierPrice);
			const sitePrice = Number(formData.price);

			if (supplierPrice > sitePrice) {
				showErrorToast("–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —Ü–µ–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ!");
				return;
			}

			// –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
			const formDataToSend = new FormData();
			formDataToSend.append("title", formData.title.trim());
			formDataToSend.append("sku", formData.sku.trim());
			formDataToSend.append("brand", formData.brand.trim());
			formDataToSend.append("price", Number(formData.price).toString());
			formDataToSend.append("supplierPrice", Number(formData.supplierPrice).toString());
			formDataToSend.append("description", formData.description.trim());
			if (formData.categoryId) {
				formDataToSend.append("categoryId", Number(formData.categoryId).toString());
			}
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º departmentId —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω
			if (user?.role === "superadmin" && formData.departmentId) {
				formDataToSend.append("departmentId", Number(formData.departmentId).toString());
			}
			console.log("üîç SENDING FILTERS:", selectedFilters);
			formDataToSend.append("filterValues", JSON.stringify(selectedFilters));

			// –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
			if (formImage) {
				formDataToSend.append("imageFile", formImage);
			}

			let response;
			if (isCreating) {
				// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
				response = await fetch("/api/products", {
					method: "POST",
					credentials: "include",
					body: formDataToSend,
				});
			} else {
				// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
				response = await fetch(`/api/products/${productId}`, {
					method: "PATCH",
					credentials: "include",
					body: formDataToSend,
				});
			}

			if (!response.ok) {
				const errorData = await response.json();
				throw new Error(errorData.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞");
			}

			const data = await response.json();
			showSuccessToast(isCreating ? "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω" : "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω");

			if (isCreating) {
				// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
				router.push(`/admin/product-management/products/${data.product.id}`);
			} else {
				// –û–±–Ω–æ–≤–ª—è–µ–º productData —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ API
				if (data.product) {
					setProductData(data.product);
				}

				// –û–±–Ω–æ–≤–ª—è–µ–º —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
				try {
					await fetch("/api/breadcrumbs/revalidate", {
						method: "POST",
						headers: {
							"Content-Type": "application/json",
						},
						body: JSON.stringify({
							path: `/admin/product-management/products/${productId}`,
						}),
					});
				} catch (error) {
					console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫:", error);
				}

				// –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
				setInitialFormData(formData);
				setInitialSelectedFilters(selectedFilters);
				setHasChanges(false);

				// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
				setFormImage(null);

				// –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
				if (data.product?.image) {
					setImagePreview(data.product.image);
					setOriginalImage(data.product.image);
				}
			}
		} catch (err) {
			console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", err);
			showErrorToast(err instanceof Error ? err.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
		} finally {
			setIsSaving(false);
		}
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
	const handleDelete = async () => {
		try {
			setIsDeleting(true);
			const response = await fetch(`/api/products/${productId}`, {
				method: "DELETE",
				credentials: "include",
			});

			if (!response.ok) {
				const errorData = await response.json();
				throw new Error(errorData.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞");
			}

			showSuccessToast("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
			router.push("/admin/product-management/products");
		} catch (err) {
			console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", err);
			showErrorToast(err instanceof Error ? err.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
		} finally {
			setIsDeleting(false);
			setShowDeleteConfirm(false);
		}
	};

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
	const canEdit = isEditMode;

	if (loading) {
		return <Skeleton />;
	}

	if (error) {
		return (
			<div className={`tableContent`}>
				<div className={`errorMessage`}>
					<h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
					<p>{error}</p>
					<Link href="/admin/product-management/products" className={`backLink`}>
						‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤
					</Link>
				</div>
			</div>
		);
	}

	return (
		<div className={`tableContent productComponent`}>
			<div className={`formContainer`}>
				<div className={`formHeader`}>
					<h2>{isCreating ? "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞" : isViewMode ? `–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞: ${productData?.title || "–ó–∞–≥—Ä—É–∑–∫–∞..."}` : `${productData?.title || "–ó–∞–≥—Ä—É–∑–∫–∞..."}`}</h2>
					{!isCreating && canEdit && user?.role === "superadmin" && (
						<div className={`formActions`}>
							<button onClick={() => setShowDeleteConfirm(true)} disabled={isDeleting} className={`dangerButton`}>
								{isDeleting ? "–£–¥–∞–ª–µ–Ω–∏–µ..." : "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"}
							</button>
						</div>
					)}
				</div>

				{canEdit && (
					<div className={`formFields`}>
						{/* –ë–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
						<div className="formRow">
							<div className="formField">
								<ImageUpload imageUrl={imagePreview} onImageChange={handleImageChange} onImageRemove={handleImageRemove} disabled={!canEdit} />
							</div>
						</div>
						<div className={`formRow`}>
							<div className={`formField`}>
								<label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *</label>
								<input
									type="text"
									id="title"
									name="title"
									value={formData.title}
									onChange={handleInputChange}
									disabled={!canEdit}
									placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
								/>
							</div>
						</div>

						<div className={`formRow`}>
							<div className={`formField`}>
								<label htmlFor="sku">SKU *</label>
								<input type="text" id="sku" name="sku" value={formData.sku} onChange={handleInputChange} disabled={!canEdit} placeholder="–í–≤–µ–¥–∏—Ç–µ SKU" />
							</div>
							<div className={`formField`}>
								<label htmlFor="brand">–ë—Ä–µ–Ω–¥ *</label>
								<input type="text" id="brand" name="brand" value={formData.brand} onChange={handleInputChange} disabled={!canEdit} placeholder="–í–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥" />
							</div>
						</div>

						<div className="formRow">
							<div className={`formField`}>
								<label htmlFor="price">–¶–µ–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ*</label>
								<input
									type="number"
									id="price"
									name="price"
									value={formData.price}
									onChange={handleInputChange}
									disabled={!canEdit}
									placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É"
									step="0.01"
									min="0"
								/>
							</div>
							<div className={`formField`}>
								<label htmlFor="supplierPrice">–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ *</label>
								<input
									type="number"
									id="supplierPrice"
									name="supplierPrice"
									value={formData.supplierPrice}
									onChange={handleInputChange}
									disabled={!canEdit}
									placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"
									step="0.01"
									min="0"
								/>
							</div>
						</div>

						<div className={`formRow`}>
							<div className={`formField`}>
								<label htmlFor="departmentId">–û—Ç–¥–µ–ª *</label>
								{user?.role === "superadmin" ? (
									<select id="departmentId" name="departmentId" value={formData.departmentId} onChange={handleInputChange} disabled={!canEdit}>
										<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª</option>
										{departments.map((department) => (
											<option key={department.id} value={department.id}>
												{department.name}
											</option>
										))}
									</select>
								) : (
									<input
										type="text"
										value={isCreating ? user?.department?.name || "–ù–µ —É–∫–∞–∑–∞–Ω" : productData?.department?.name || "–ù–µ —É–∫–∞–∑–∞–Ω"}
										disabled={true}
										className={`disabledInput`}
										title="–¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –æ—Ç–¥–µ–ª —Ç–æ–≤–∞—Ä–∞"
									/>
								)}
							</div>
							<div className={`formField`}>
								<label htmlFor="categoryId">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
								<select id="categoryId" name="categoryId" value={formData.categoryId} onChange={handleInputChange} disabled={!canEdit || !canChangeCategory}>
									<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
									{allowedCategories.map((category) => (
										<option key={category.id} value={category.id}>
											{category.title}
										</option>
									))}
								</select>
								{!canChangeCategory && <div className={`fieldNote`}>–î–ª—è –¥–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</div>}
							</div>
						</div>

						<div className={`formField`}>
							<label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</label>
							<textarea
								id="description"
								name="description"
								value={formData.description}
								onChange={handleInputChange}
								disabled={!canEdit}
								placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
								rows={4}
							/>
						</div>

						{/* –§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
						{isLoadingFilters && (
							<div className={`filtersSection`}>
								<Loading />
							</div>
						)}
						{categoryFilters.length > 0 && !isLoadingFilters && (
							<div className={`filtersSection`}>
								<h3 className={`filtersTitle`}>–§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
								<div className={`filtersContainer`}>
									{categoryFilters.map((filter) => (
										<div key={filter.id} className={`filterGroup`}>
											<label className={`filterLabel`}>
												{filter.title}
												{filter.type === "range" && filter.unit && ` (${filter.unit})`}
											</label>

											{/* –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä */}
											{filter.type === "select" && (
												<div className={`filterValues`}>
													{filter.values.map((value) => (
														<div
															key={value.id}
															className={`filterValueItem ${isFilterValueSelected(filter.id, value.id) ? "active" : ""} ${
																!canEdit ? "disabled" : ""
															}`}
															onClick={() => canEdit && handleFilterChange(filter.id, value.id)}
														>
															<span className={`filterValueText`}>{value.value}</span>
														</div>
													))}
												</div>
											)}

											{/* –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä */}
											{filter.type === "multi_select" && (
												<div className={`filterValues`}>
													{filter.values.map((value) => (
														<div
															key={value.id}
															className={`filterValueItem ${isFilterValueSelected(filter.id, value.id) ? "active" : ""} ${
																!canEdit ? "disabled" : ""
															}`}
															onClick={() => canEdit && handleFilterChange(filter.id, value.id)}
														>
															<span className={`filterValueText`}>{value.value}</span>
														</div>
													))}
												</div>
											)}

											{/* –î–∏–∞–ø–∞–∑–æ–Ω */}
											{filter.type === "range" && (
												<div className={`filterRangeInput`}>
													<input
														type="number"
														placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ"
														value={getRangeValue(filter.id)}
														onChange={(e) => handleRangeValueChange(filter.id, e.target.value)}
														disabled={!canEdit}
														className={`rangeInput ${!canEdit ? "disabled" : ""}`}
													/>
													{filter.unit && <span className={`rangeUnit`}>{filter.unit}</span>}
												</div>
											)}

											{/* –î–∞/–ù–µ—Ç */}
											{filter.type === "boolean" && (
												<div className={`filterBoolean`}>
													{filter.values.map((value, index) => (
														<div
															key={value.id}
															className={`booleanOption ${isFilterValueSelected(filter.id, value.id) ? "active" : ""} ${!canEdit ? "disabled" : ""}`}
															onClick={() => canEdit && handleBooleanValueChange(filter.id, value.id)}
														>
															<span>{value.value}</span>
														</div>
													))}
												</div>
											)}
										</div>
									))}
								</div>
							</div>
						)}
						{categoryFilters.length === 0 && formData.categoryId && !isLoadingFilters && (
							<div className={`filtersSection`}>
								<p>–§–∏–ª—å—Ç—Ä—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
							</div>
						)}
					</div>
				)}

				{!canEdit && isViewMode && (
					<div className={`viewModeContainer`}>
						<div className={`productInfoCard`}>
							<div className={`productImageSection`}>
								{productData?.image ? (
									<img src={productData.image} alt={productData.title} className={`productImage`} />
								) : (
									<div className={`noImagePlaceholder`}>
										<span>–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</span>
									</div>
								)}
							</div>
							<div className={`productDetailsSection`}>
								<div className={`productInfoRow`}>
									<span className={`infoLabel`}>–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
									<span className={`infoValue`}>{productData?.title}</span>
								</div>
								<div className={`productInfoRow`}>
									<span className={`infoLabel`}>SKU:</span>
									<span className={`infoValue`}>{productData?.sku}</span>
								</div>
								<div className={`productInfoRow`}>
									<span className={`infoLabel`}>–ë—Ä–µ–Ω–¥:</span>
									<span className={`infoValue`}>{productData?.brand}</span>
								</div>
								<div className={`productInfoRow`}>
									<span className={`infoLabel`}>–¶–µ–Ω–∞:</span>
									<span className={`infoValue priceValue`}>{productData?.price} ‚ÇΩ</span>
								</div>
								<div className={`productInfoRow`}>
									<span className={`infoLabel`}>–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:</span>
									<span className={`infoValue`}>{productData?.supplierPrice ? `${productData.supplierPrice} ‚ÇΩ` : "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}</span>
								</div>
								<div className={`productInfoRow`}>
									<span className={`infoLabel`}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
									<span className={`infoValue`}>{productData?.categoryTitle || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}</span>
								</div>
								<div className={`productInfoRow`}>
									<span className={`infoLabel`}>–û—Ç–¥–µ–ª:</span>
									<span className={`infoValue`}>{productData?.department?.name || "–ù–µ —É–∫–∞–∑–∞–Ω"}</span>
								</div>
								{productData?.description && (
									<div className={`productInfoRow fullWidth`}>
										<span className={`infoLabel`}>–û–ø–∏—Å–∞–Ω–∏–µ:</span>
										<span className={`infoValue descriptionValue`}>{productData.description}</span>
									</div>
								)}
								{productData?.filters && productData.filters.length > 0 && (
									<div className={`productInfoRow fullWidth`}>
										<span className={`infoLabel`}>–§–∏–ª—å—Ç—Ä—ã:</span>
										<div className={`infoValue filtersValue`}>
											{productData.filters.map((filter: any) => (
												<div key={filter.id} className={`filterDisplayGroup`}>
													<span className={`filterDisplayLabel`}>{filter.title}:</span>
													<span className={`filterDisplayValues`}>
														{filter.selected_values ? filter.selected_values.map((value: any) => value.value).join(", ") : ""}
													</span>
												</div>
											))}
										</div>
									</div>
								)}
							</div>
						</div>
					</div>
				)}

				{!canEdit && !isViewMode && (
					<div className={`noEditMessage`}>
						<p>–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</p>
					</div>
				)}
			</div>

			{showDeleteConfirm && (
				<ConfirmPopup
					open={showDeleteConfirm}
					title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è"
					message={`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä "${productData?.title}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`}
					onConfirm={handleDelete}
					onCancel={() => setShowDeleteConfirm(false)}
					confirmText="–£–¥–∞–ª–∏—Ç—å"
					cancelText="–û—Ç–º–µ–Ω–∞"
				/>
			)}

			{/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π */}
			{canEdit && hasChanges && (
				<div className={`fixedButtons`}>
					<button onClick={handleCancel} className={`secondaryButton`} disabled={isSaving}>
						–û—Ç–º–µ–Ω–∏—Ç—å
					</button>
					<button onClick={handleSave} className={`primaryButton`} disabled={isSaving}>
						{isSaving ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"}
					</button>
				</div>
			)}
		</div>
	);
}
