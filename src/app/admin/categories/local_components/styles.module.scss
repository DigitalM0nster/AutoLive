.sectionsContent {
	display: flex;
	flex-direction: column;
	gap: 10px;
	align-items: flex-start;

	.sectionBlock {
		width: calc(100% - 48px);
	}
}

// –°—Ç–∏–ª–∏ –¥–ª—è —Å–µ–∫—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
.imageUploadBlock {
	display: flex;
	flex-direction: column;
	gap: 20px;
	align-items: flex-start;

	.imagePreview {
		width: 200px;
		height: fit-content;
		padding: 20px;
		border-radius: 16px;
		overflow: hidden;
		background: #ffffff;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		border: 2px dashed #d1d5db;
		cursor: pointer;
		position: relative;
		gap: 12px;

		&:hover {
			border-color: #3b82f6;
			background: #f8fafc;
			transform: translateY(-2px);
			box-shadow: 0 8px 25px rgba(59, 130, 246, 0.15);

			.imageActions {
				opacity: 1;
				transform: translateY(0);
			}
		}

		&:active {
			transform: translateY(0);
		}

		img {
			width: 80px;
			height: 80px;
			object-fit: cover;
			transition: all 0.3s ease;
			user-select: none;
			-webkit-user-select: none;
			-moz-user-select: none;
			-ms-user-select: none;
			pointer-events: none;
		}
	}

	.noImage {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: 100%;
		color: #6b7280;
		font-size: 10px;
		text-align: center;
		line-height: 1.3;
		gap: 4px;

		&::before {
			content: "üì∑";
			font-size: 20px;
			margin-bottom: 2px;
		}
	}

	.imageActions {
		display: flex;
		position: absolute;
		bottom: 10px;
		gap: 8px;
		opacity: 0;
		transform: translateY(10px);
		transition: all 0.3s ease;
	}

	.imageActionButton {
		display: flex;
		align-items: center;
		gap: 4px;
		padding: 6px 12px;
		border: none;
		border-radius: 6px;
		font-size: 11px;
		font-weight: 500;
	}

	.imageUpload {
		display: flex;
		align-items: center;
		gap: 12px;
	}

	.uploadButton {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 16px;
		background: var(--blue-color);
		color: white;
		border: none;
		border-radius: 8px;
		font-size: 12px;
		font-weight: 500;
		cursor: pointer;
		transition: all 0.2s ease;
		box-shadow: 0 2px 4px rgba(59, 130, 246, 0.2);

		&:hover {
			background: var(--dark-blue-color);
			transform: translateY(-1px);
			box-shadow: 0 4px 8px rgba(59, 130, 246, 0.3);
		}

		&:active {
			transform: translateY(0);
		}
	}
}

.filtersList {
	display: flex;
	flex-direction: column;
	gap: 10px;

	.filterCard {
		display: flex;
		flex-direction: column;
		gap: 10px;

		.filterHeader {
			display: flex;
			align-items: flex-start;
			gap: 10px;

			.inputBlock {
				width: 100%;
			}

			input {
				width: calc(100% - 16px);
			}

			button {
				align-self: flex-end;
				min-width: max-content;
				width: max-content;
				padding: 7px 22px;
				border-radius: 4px;
			}

			.filterActions {
				position: relative;
				display: flex;
				flex-direction: column;
				gap: 2px;
				height: fit-content;
				width: fit-content;
			}
		}

		.filterType {
		}

		.inputBlock {
			display: flex;
			flex-direction: column;
			gap: 2px;
		}

		.inputDescription {
			font-size: 10px;
			font-weight: 500;
			text-transform: uppercase;
			letter-spacing: 0.75px;
			color: var(--text-color);
			opacity: 0.5;
		}

		.emptyValues {
			font-size: 12px;
		}

		.valuesList {
			position: relative;
			display: flex;
			gap: 5px;
			flex-wrap: wrap;
			border: 1px solid var(--grey-color);
			border-radius: 8px;
			padding: 10px;
			height: fit-content;

			&.error {
				border-color: var(--red-color);
			}

			.valueItem {
				position: relative;
				width: fit-content;
				height: fit-content;

				input {
					position: relative;
					border: 1px dashed var(--grey-color);
					padding: 6px calc(30px) 6px 8px;

					&:focus {
						border: 1px dashed var(--blue-color);
					}

					&.error {
						border-color: var(--red-color);
					}
				}

				button {
					display: flex;
					align-items: center;
					justify-content: center;
					position: absolute;
					right: 0;
					width: 30px;
					height: 100%;
					padding: 0;
					top: 50%;
					transform: translateY(-50%);
					background: transparent;
					box-shadow: none;
					border: none;

					svg {
						stroke: var(--red-color);
					}
				}
			}

			.emptyValues {
				position: relative;
				border: 1px dashed transparent;
				padding: 6px calc(30px) 6px 8px;
				border-radius: 4px;
				color: var(--text-color);
				opacity: 0.5;
			}

			.addValueButton {
				display: flex;
				align-items: center;
				justify-content: center;
				font-size: var(--inputFontSize);
				gap: 5px;
				padding: 6px 12px;
				border-radius: 4px;
				background: transparent;
				border: 1px dashed var(--grey-color);
				color: var(--blue-color);
				transition: all 0.2s ease;

				&:hover {
					border: 1px dashed var(--blue-color);
				}
			}
		}
	}
}
