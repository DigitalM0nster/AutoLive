// src\app\api\departments\[departmentId]\products-by-category\route.ts

import { prisma } from "@/lib/prisma";
import { NextRequest, NextResponse } from "next/server";
import { withPermission } from "@/middleware/permissionMiddleware";

export const GET = withPermission(
	async (req: NextRequest, { user, scope }) => {
		const departmentId = Number(req.nextUrl.pathname.split("/")[3]);
		if (isNaN(departmentId)) return NextResponse.json({ error: "–ù–µ–≤–µ—Ä–Ω—ã–π ID" }, { status: 400 });

		// –£–¥–∞–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –æ—Ç–¥–µ–ª—É, —á—Ç–æ–±—ã —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ª—é–±–æ–º –æ—Ç–¥–µ–ª–µ
		// –õ—é–±–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏ view_products –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö

		const result = await prisma.product.groupBy({
			by: ["categoryId"],
			where: { departmentId },
			_count: true,
		});

		// üëá –ø—Ä–∏–≤–æ–¥–∏–º null –∫ 0
		const data = Object.fromEntries(result.map((r) => [r.categoryId ?? 0, r._count]));

		return NextResponse.json(data);
	},
	"view_products",
	["superadmin", "admin", "manager"] // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤, —á—Ç–æ–±—ã –æ–Ω–∏ —Ç–æ–∂–µ –º–æ–≥–ª–∏ –≤–∏–¥–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
);
